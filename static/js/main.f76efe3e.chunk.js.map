{"version":3,"sources":["components/ImageCard.js","components/ImageSearch.js","App.js","index.js"],"names":["ImageCard","image","tags","split","className","src","webformatURL","alt","user","views","downloads","likes","map","tag","index","key","ImageSearch","searchText","useState","text","setText","onSubmit","e","preventDefault","onChange","target","value","type","placeholder","App","images","setImages","isLoading","setIsLoading","term","setTerm","useEffect","fetch","process","then","res","json","data","hits","catch","err","console","log","length","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wKAyCeA,EAvCG,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAEXC,EAAOD,EAAMC,KAAKC,MAAM,KAE9B,OACI,yBAAKC,UAAU,oDACjB,yBAAKC,IAAKJ,EAAMK,aAAcC,IAAI,GAAGH,UAAU,WAC/C,yBAAKA,UAAU,aACb,yBAAKA,UAAU,yCAAf,YACYH,EAAMO,MAElB,4BACE,4BACE,4CACCP,EAAMQ,OAET,4BACE,gDACCR,EAAMS,WAET,4BACE,4CACCT,EAAMU,SAIb,yBAAKP,UAAU,aAEdF,EAAKU,KAAI,SAACC,EAAIC,GAAL,OACR,0BAAMC,IAAKD,EAAOV,UAAU,4FAA5B,IACES,SCLKG,EAzBK,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAAiB,EACbC,mBAAS,IADI,mBAC7BC,EAD6B,KACxBC,EADwB,KAQpC,OACI,yBAAKhB,UAAY,kDACb,0BAAMiB,SAPG,SAACC,GACdA,EAAEC,iBACFN,EAAWE,IAKmBf,UAAY,mBAClC,yBAAKA,UAAY,8DACjB,2BAAOoB,SAAY,SAAAF,GAAC,OAAEF,EAAQE,EAAEG,OAAOC,QAAQtB,UAAY,kHACvDuB,KAAK,OAAOC,YAAY,yBAC5B,4BAAQxB,UAAU,4IAECuB,KAAK,UAFxB,cCmBDE,MA/Bf,WAAgB,IAAD,EACYX,mBAAS,IADrB,mBACNY,EADM,KACCC,EADD,OAEoBb,oBAAS,GAF7B,mBAENc,EAFM,KAEIC,EAFJ,OAGUf,mBAAS,IAHnB,mBAGNgB,EAHM,KAGDC,EAHC,KAeb,OAVAC,qBAAU,WACRC,MAAM,gCAAD,OAAiCC,qCAAjC,cAA4EJ,EAA5E,kCACJK,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAG,GACJX,EAAUW,EAAKC,MACfV,GAAa,MAEdW,OAAM,SAAAC,GAAG,OAAEC,QAAQC,IAAIF,QACxB,CAACX,IAGD,yBAAK9B,UAAU,2BACb,kBAAC,EAAD,CAAaa,WAAY,SAACE,GAAD,OAAQgB,EAAQhB,OAEvCa,GAA6B,IAAhBF,EAAOkB,QAAc,wBAAI5C,UAAU,sCAAd,4BAEnC4B,EAAW,wBAAI5B,UAAU,sCAAd,iCAAwF,yBAAKA,UAAU,0BAChH0B,EAAOlB,KAAI,SAAAX,GAAK,OACf,kBAAC,EAAD,CAAWc,IAAKd,EAAMgD,GAAIhD,MAAOA,UCtB3CiD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.f76efe3e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst ImageCard = ({ image }) => {\r\n\r\n    const tags = image.tags.split(',');\r\n\r\n    return (\r\n        <div className=\"max-w-sm rounded overflow-hidden shadow-lg py-10\">\r\n      <img src={image.webformatURL} alt=\"\" className=\"w-full\"/>\r\n      <div className=\"px-6 py-4\">\r\n        <div className=\"font-bold text-black-500 text-xl mb-2\">\r\n          Photo by {image.user}\r\n        </div>\r\n        <ul>\r\n          <li>\r\n            <strong> Views: </strong>\r\n            {image.views}\r\n          </li>\r\n          <li>\r\n            <strong> Downloads: </strong>\r\n            {image.downloads}\r\n          </li>\r\n          <li>\r\n            <strong> Likes: </strong>\r\n            {image.likes}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div className=\"px-6 py-4\">\r\n        \r\n      {tags.map((tag,index)=>(\r\n        <span key={index} className=\"inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2\">\r\n        #{tag}\r\n      </span>\r\n      ))}\r\n        \r\n      </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default ImageCard;","import React,{ useState } from 'react'\r\n\r\nconst ImageSearch = ({ searchText }) => {\r\n    const [text,setText] = useState('');\r\n\r\n    const onSubmit = (e)=>{\r\n        e.preventDefault();\r\n        searchText(text);\r\n    }\r\n\r\n    return (\r\n        <div className = 'max-w-sm rounded overflow-hidden my-10 mx-auto'>\r\n            <form onSubmit={onSubmit} className = 'w-full max-w-sm'>\r\n                <div className = 'flex items-center border-b border-b-2 border-blue-500 py-2'>\r\n                <input onChange = {e=>setText(e.target.value)} className = 'appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none'\r\n                    type=\"text\" placeholder=\"Search Image Term...\"/>\r\n                <button className=\"flex-shrink-0 bg-blue-500 hover:bg-blue-700 \r\n                border-blue-500 hover:border-blue-700 text-sm border-4 text-white py-1\r\n                px-2 rounded-full\" type=\"submit\">\r\n                Search\r\n                </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageSearch;\r\n","import React,{ useState,useEffect } from 'react';\nimport ImageCard from './components/ImageCard';\nimport ImageSearch from './components/ImageSearch';\n\nfunction App() {\n  const [images,setImages]=useState([]);\n  const [isLoading,setIsLoading] = useState(true);\n  const [term,setTerm] = useState('');\n  \n  useEffect(()=>{\n    fetch(`https://pixabay.com/api/?key=${process.env.REACT_APP_PIXABAY_API_KEY}&q=${term}&image_type=photo&pretty=true`)\n    .then(res=>res.json())\n    .then(data=>{\n      setImages(data.hits);\n      setIsLoading(false);\n    })\n    .catch(err=>console.log(err))\n  },[term]);\n\n  return (\n    <div className=\"container mx-auto py-10\">\n      <ImageSearch searchText={(text)=>setTerm(text)}/>\n      \n      {!isLoading && images.length===0 && <h2 className=\"text-5xl text-center mx-auto mt-32\"> Sorry, no images found </h2>}\n      \n      {isLoading? <h2 className=\"text-5xl text-center mx-auto mt-32\"> Breathe in... Breathe out...</h2> : <div className=\"grid grid-cols-4 gap-4\">\n        {images.map(image=>(\n          <ImageCard key={image.id} image={image} />\n        ))}\n      </div>\n    }\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/main.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}